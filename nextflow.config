Date now = new Date()

/*
 * General Details on config setup:
 * https://www.nextflow.io/docs/latest/config.html
 */

manifest {
    description = 'Proof of concept of a paired-end RNA-seq pipeline implemented with Nextflow on GCP'
    author = 'ayoad@google.com'
    nextflowVersion = '>=20.07.0'
}

profiles {
    'paired-end-GRCh38' {
        // docker
        docker.enabled = true

        // process
        process.executor = 'google-lifesciences'
        process.machineType = 'n1-standard-8' // replace if needed
        process.container = 'europe-west4-docker.pkg.dev/ignae-ai/rnaseqrepository/rnaseqdocker:v1' // replace

        // google
        google.project = 'ignae-ai' // replace
        google.region = 'europe-west4' // replace if needed

        // params - data
        params.reads = "gs://rnaseq-alpha/Raw_data_humanbonemarrow/*_{1,2}.fastq.gz" // replace
        
        // params - annotations
        params.star_index = "gs://rnaseq-alpha/backup/GRCh38.v42/STAR" // replace
        params.annotations_gtf = "gs://rnaseq-alpha/backup/GRCh38.v42/gencode.v44.annotation.gtf" // replace
        params.annotations_fasta = "gs://rnaseq-alpha/backup/GRCh38.v42/GRCh38.primary_assembly.genome.fa" // replace
        
        // params - bigquery outputs
        params.gene_results_table_id = "ignae-ai.rnaseq_nf_gene_results" // replace
        params.isoform_results_table_id = "ignae-ai.rnaseq_nf_isoform_results" // replace
        
        // params - gcs result outputs
        params.gcs_bucket = 'nextflow-pipelines-output'
        params.timestamp = now.format('yyyyMMdd-HH-mm-ss')
        params.results_dir = "gs://rnaseq-alpha/results" // replace
        params.trace_dir = "gs://rnaseq-alpha/results/pipeline_info" // replace

        // workDir
        workDir = "gs://${params.gcs_bucket}/scratch/${params.timestamp}"

        // timeline
        timeline.enabled = true
        timeline.file = "${params.trace_dir}/${params.timestamp}_timeline.html"

        // report
        report.enabled = true
        report.file = "${params.trace_dir}/${params.timestamp}_report.html"

        // trace
        trace.enabled = true
        trace.file = "${params.trace_dir}/${params.timestamp}_trace.txt"

        // dag
        dag.enabled = true
        dag.file = "${params.trace_dir}/${params.timestamp}_dag.svg"

        // cleanup
        cleanup = true
    }
}
